** Here we focus on 2nd chapter of the Pro Git Book -- branching

git branch
    - git branch fixing_bug
        // only creates the branch, does not switch to it
    - creating branch basically creates a pointer which points
      to certain place.
    - every branch has the HEAD pointer.

swithcing branches
    - git checkout new_branch
        // this moves the HEAD pointer from master to new_branch
    - git switch does the same

git log
    - this shows only log from the current branch you're on!
    - git log --oneline --decorate --graph --all

create and switch to new branch
    - git checkout -b branchname
    - git switch -c branchname // equal to above

IMPORTANT: cherry pick!
    - in order to get only one file updates from the other branch...
    - git checkout the_other_branch the_path_to_file_i_want
    - then later commit it and viola!

delete
    - git branch -d hotfix

synchroniznig branches  
    - if master is different than your current branch, you can:
    1. merge master in your branch // download latest changes
    2. or pull in hotfix branch to your master later.
    master: merge hotfix
    branch -d hotfix

merge conflicts
    - if conflict, merge is abandoned. fix conflict
    - first file from working branch, <<<<<<<<<<
    - delimeter: =========
    - other branch >>>>>>>>>>>
    - after fixed, put git add! STAGING MARKS CONFLICT RESOLVED.
    - then git commit to complete

    - graphical: git mergetool

check latest commit on each branch:
    - git branch -v
    
delete branch:
    - git branch -d localBranchName
    - git push origin --delete remoteBranchName

check which branches were merged already to master
    - git branch --merged // if merged, perhaps not needed anymore
    - git branch --unmerged // similar
    
rename
    - git branch --move old_branch_name new_fancy_branch
    - git push --set-upstream origin new_fancy_branch


remote branches!
    - git add remote another_www_source git.www.https.online.com

git fetch origin
    - this checks and puts the pointer to the latest from remote master
    - and syncronize your work with remote, moving origin/master pointer to new
 